# Build system requirements
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

# Find packages in the "src" folder
[tool.setuptools.packages.find]
where = ["src"]  # search for packages in the "src" folder
exclude = []  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

# Project metadata
[project]
authors = [
    { name = "Alina Weidemann", email = "alina.weidemann@study.hs-duesseldorf.de" },
    { name = "Sophie Paul", email = "sophie.paul@study.hs-duesseldorf.de" },
    { name = "Nikita Rosik", email = "nikita.rosik@study.hs-duesseldorf.de" },
    { name = "Meric Kervankiran", email = "meric.kervankiran@study.hs-duesseldorf.de" },
    { name = "Maurice FÃ¼sser", email = "maurice.fuesser@study.hs-duesseldorf.de" },
    { name = "Anas Alhariri", email = "anas.alhariri@study.hs-duesseldorf.de" }
]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "ruff",
    "numpy",
    "pandas",
    "opencv-python",
    "mediapipe",
    "tqdm",
    "scipy",
    "matplotlib",
    "pytest",
    "black",
]

description = "A Python package for step counting using smart watch."
license = {file = "LICENSE"}
name = "step-counter"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.8"
version = "0.1.0"

# Optional dependencies
[project.optional-dependencies]
dev = [
    "black",
    "pytest",
    "ruff",
]
publishing = [
    "build",
    "twine",
    "wheel",
]

# Black configuration
[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
)/ 
'''

# isort configuration
[tool.isort]
profile = "black"
known_first_party = "step_counter"
src_paths = ["src", "tests"]  # Include both src and tests directories
line_length = "100"

[tool.pylint]  # If you opt to use pylint
# Pylint configuration options